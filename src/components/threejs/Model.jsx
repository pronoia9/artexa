'use client';

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 brunos-room-v1.glb --transform
*/

import React, { useEffect, useRef } from 'react';
import { MathUtils } from 'three';
import { PerspectiveCamera, useAnimations, useGLTF, useScroll, useTexture } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';

import { bakedDay, bakedNeutral, bakedNight, roomModel } from '.';
import { dataStore, isDarkTheme } from '@/utils';

const BakedObject = (props) => {
  const { theme } = dataStore((store) => ({ theme: store.theme }));
  const bakedTextureDay = useTexture(bakedDay),
    bakedTextureNight = useTexture(bakedNight),
    bakedTextureNeutral = useTexture(bakedNeutral);

  return (
    <mesh {...props}>
      <meshBasicMaterial map={isDarkTheme(theme) ? bakedTextureNight : bakedTextureDay} map-flipY={false} />
    </mesh>
  );
};

export const Model = ({ scrollRef, ...props }) => {
  const group = useRef(),
    cameraRef = useRef();
  const { nodes, materials, animations } = useGLTF(roomModel);
  const { actions } = useAnimations(animations, group);
  const scroll = useScroll();

  // isDarkTheme(theme)
  useEffect(() => void (actions['EmptyAction'].play().paused = true), []);

  useFrame((state, delta) => {
    // state.camera.position.set(
    //   // Math.sin((offset - 0.5) * -0.5) * 29,
    //   // Math.atan((offset - 0.5) * Math.PI * 2) * 14,
    //   // Math.cos(((offset - 0.5) * Math.PI) / 3) * 12
    //   25,
    //   25,
    //   25
    // );
    // 0, 4, 0
    // 4.06, 0.21, -4.56
    // state.camera.lookAt(0, 0, 0);

    const action = actions['EmptyAction'];
    action.time = MathUtils.lerp(action.time, action.getClip().duration * scroll.offset, 0.05);

    // console.log(cameraRef.current.position);
    state.camera.position.lerp({ x: state.pointer.x / 2, y: 0, z: -state.pointer.y / 2 }, 0.1);
    // state.camera.lookAt(cameraRef.current.position.x - 1, cameraRef.current.position.y, cameraRef.current.position.z);
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <group name='Scene'>
        <group name='Model' scale={0.73}>
          <BakedObject
            name='Bookshelf'
            geometry={nodes.Bookshelf.geometry}
            material={nodes.Bookshelf.material}
            position={[0, 3.15, -4.87]}
            rotation={[Math.PI, 0, Math.PI]}
          />
          <BakedObject
            name='Chair'
            geometry={nodes.Chair.geometry}
            material={nodes.Chair.material}
            position={[0, 3.15, -4.87]}
            rotation={[Math.PI, 0, Math.PI]}
          />
          <BakedObject
            name='Chair_Top'
            geometry={nodes.Chair_Top.geometry}
            material={nodes.Chair_Top.material}
            position={[-1, 1.42, -0.13]}
            rotation={[-Math.PI / 2, 0, 0]}
          />
          <mesh
            name='Coffee_Steam'
            geometry={nodes.Coffee_Steam.geometry}
            material={nodes.Coffee_Steam.material}
            position={[-2.89, 2.66, 1.4]}
            rotation={[-Math.PI / 2, 0, -Math.PI / 2]}
          />
          <BakedObject
            name='CoffeeTable'
            geometry={nodes.CoffeeTable.geometry}
            material={nodes.CoffeeTable.material}
            position={[0, 3.15, -4.87]}
            rotation={[Math.PI, 0, Math.PI]}
          />
          <BakedObject
            name='Console'
            geometry={nodes.Console.geometry}
            material={nodes.Console.material}
            position={[0, 3.15, -4.87]}
            rotation={[Math.PI, 0, Math.PI]}
          />
          <BakedObject
            name='Controller'
            geometry={nodes.Controller.geometry}
            material={nodes.Controller.material}
            position={[0, 3.15, -4.87]}
            rotation={[Math.PI, 0, Math.PI]}
          />
          <BakedObject
            name='Couch'
            geometry={nodes.Couch.geometry}
            material={nodes.Couch.material}
            position={[0, 3.15, -4.87]}
            rotation={[Math.PI, 0, Math.PI]}
          />
          {/* <group name='Cube' position={[-4.64, 0, -4.7]} scale={[5.03, 3.42, 5.03]}>
            <mesh name='Cube_1' geometry={nodes.Cube_1.geometry} material={nodes.Cube_1.material} />
            <mesh name='Cube_2' geometry={nodes.Cube_2.geometry} material={nodes.Cube_2.material} />
          </group> */}
          <BakedObject
            name='Desk'
            geometry={nodes.Desk.geometry}
            material={nodes.Desk.material}
            position={[0, 3.15, -4.87]}
            rotation={[Math.PI, 0, Math.PI]}
          />
          <BakedObject
            name='Elephants'
            geometry={nodes.Elephants.geometry}
            material={nodes.Elephants.material}
            position={[0, 3.15, -4.87]}
            rotation={[Math.PI, 0, Math.PI]}
          />
          <BakedObject
            name='Elgato_Light'
            geometry={nodes.Elgato_Light.geometry}
            material={nodes.Elgato_Light.material}
            position={[-4.03, 4.59, 0.06]}
            rotation={[1.48, -0.25, -1.94]}
            scale={1.1}
          />
          <mesh
            name='Google_Home_Leds001'
            geometry={nodes.Google_Home_Leds001.geometry}
            material={nodes.Google_Home_Leds001.material}
            position={[1.56, 1.11, -1.02]}
            rotation={[-Math.PI, 0, -3.02]}
            scale={0.02}
          />
          <mesh
            name='Google_Home_Leds002'
            geometry={nodes.Google_Home_Leds002.geometry}
            material={nodes.Google_Home_Leds002.material}
            position={[1.45, 1.11, -1.02]}
            rotation={[0, 0, 0.12]}
            scale={0.02}
          />
          <mesh
            name='Google_Home_Leds003'
            geometry={nodes.Google_Home_Leds003.geometry}
            material={nodes.Google_Home_Leds003.material}
            position={[1.49, 1.12, -1.02]}
            rotation={[0, 0, 0.04]}
            scale={0.02}
          />
          <mesh
            name='Google_Home_Leds004'
            geometry={nodes.Google_Home_Leds004.geometry}
            material={nodes.Google_Home_Leds004.material}
            position={[1.53, 1.12, -1.02]}
            rotation={[-Math.PI, 0, -3.1]}
            scale={0.02}
          />
          <BakedObject
            name='GoogleHome'
            geometry={nodes.GoogleHome.geometry}
            material={nodes.GoogleHome.material}
            position={[0, 3.15, -4.87]}
            rotation={[Math.PI, 0, Math.PI]}
          />
          <BakedObject
            name='Guitar'
            geometry={nodes.Guitar.geometry}
            material={nodes.Guitar.material}
            position={[0, 3.15, -4.87]}
            rotation={[Math.PI, 0, Math.PI]}
          />
          <BakedObject
            name='Macbook'
            geometry={nodes.Macbook.geometry}
            material={nodes.Macbook.material}
            position={[0, 3.15, -4.87]}
            rotation={[Math.PI, 0, Math.PI]}
          />
          <BakedObject
            name='Nintendo_Switch'
            geometry={nodes.Nintendo_Switch.geometry}
            material={nodes.Nintendo_Switch.material}
            position={[0, 3.15, -4.87]}
            rotation={[Math.PI, 0, Math.PI]}
          />
          <BakedObject
            name='Octopus'
            geometry={nodes.Octopus.geometry}
            material={nodes.Octopus.material}
            position={[0, 3.15, -4.87]}
            rotation={[Math.PI, 0, Math.PI]}
          />
          <BakedObject
            name='PC'
            geometry={nodes.PC.geometry}
            material={nodes.PC.material}
            position={[0, 3.15, -4.87]}
            rotation={[Math.PI, 0, Math.PI]}
          />
          <BakedObject
            name='Pet_Bed'
            geometry={nodes.Pet_Bed.geometry}
            material={nodes.Pet_Bed.material}
            position={[0, 3.15, -4.87]}
            rotation={[Math.PI, 0, Math.PI]}
          />
          <BakedObject
            name='Plant_(TV_Unit)'
            geometry={nodes['Plant_(TV_Unit)'].geometry}
            material={nodes['Plant_(TV_Unit)'].material}
            position={[0, 3.15, -4.87]}
            rotation={[Math.PI, 0, Math.PI]}
          />
          <BakedObject
            name='PS5'
            geometry={nodes.PS5.geometry}
            material={nodes.PS5.material}
            position={[0, 3.15, -4.87]}
            rotation={[Math.PI, 0, Math.PI]}
          />
          <BakedObject name='Room' geometry={nodes.Room.geometry} material={nodes.Room.material} rotation={[Math.PI, 0, Math.PI]} />
          <mesh
            name='Screen_(Mac)'
            geometry={nodes['Screen_(Mac)'].geometry}
            material={nodes['Screen_(Mac)'].material}
            position={[-3.77, 2.62, -2.22]}
            rotation={[1.56, 0.05, -1.27]}
          />
          <mesh
            name='Screen_(PC)'
            geometry={nodes['Screen_(PC)'].geometry}
            material={nodes['Screen_(PC)'].material}
            position={[-4.06, 3.36, -0.31]}
            rotation={[-Math.PI, 0, Math.PI / 2]}
          />
          <mesh
            name='Screen_(TV)'
            geometry={nodes['Screen_(TV)'].geometry}
            material={nodes['Screen_(TV)'].material}
            position={[0, 3.15, -4.87]}
            rotation={[Math.PI, 0, Math.PI]}
          />
          <BakedObject
            name='TV'
            geometry={nodes.TV.geometry}
            material={nodes.TV.material}
            position={[0, 3.15, -4.87]}
            rotation={[Math.PI, 0, Math.PI]}
          />
          <BakedObject
            name='TV_Unit'
            geometry={nodes.TV_Unit.geometry}
            material={nodes.TV_Unit.material}
            position={[0, 3.15, -4.87]}
            rotation={[Math.PI, 0, Math.PI]}
          />
          <BakedObject
            name='VR'
            geometry={nodes.VR.geometry}
            material={nodes.VR.material}
            position={[0, 3.15, -4.87]}
            rotation={[Math.PI, 0, Math.PI]}
          />
        </group>
        <group ref={cameraRef} name='Camera' position={[20.02, 15.24, 20.01]} rotation={[1.24, 0.3, -0.74]}>
          <PerspectiveCamera name='TrueIsoCam' makeDefault={true} far={1000} near={0.1} fov={22.9} rotation={[-Math.PI / 2, 0, 0]} />
        </group>
      </group>
    </group>
  );
};

useGLTF.preload(roomModel);
